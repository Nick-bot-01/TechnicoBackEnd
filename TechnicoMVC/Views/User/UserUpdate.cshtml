@using TechnicoBackEnd.Auth
@using TechnicoBackEnd.DTOs;
@using TechnicoBackEnd.Responses;
@{
    ViewData["Title"] = "User Update Page";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flexible Image Buttons with Bootstrap</title>
    <!-- Link to Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Optional: Add custom hover effect if you want */
        .image-button:hover img {
            transform: scale(1.1);
            opacity: 0.8;
        }

        .image-button img {
            transition: transform 0.3s ease, opacity 0.3s ease;
            width: 100%; /* Make sure images scale to fit their container */
            height: auto; /* Maintain aspect ratio */
        }
    </style>
</head>
@model UserDTO

<div class="col">
    <div><h1><b>Update Personal Details</b></h1></div>
</div>


<div class="card" style="width: 18rem; height:fit-content">
    <img class="card-img-top" src="~/images/user.jpg" alt="Card image cap">
    <div class="card-body">
        <h5 class="card-title">User Details</h5>
    </div>
    @using (Html.BeginForm("UserUpdateButtonCallback", "User", FormMethod.Post))
    {
        <div class="form-group">
            <div>
                <label for="Email"> Email: </label>
                @Html.TextBoxFor(m => m.Email, new { @disabled = "disabled", @Value = Model.Email })
                @Html.HiddenFor(m => m.Email)
            </div>

            <div>
                <label for="VAT"> VAT: </label>
                @Html.TextBoxFor(m => m.VAT, new { @disabled = "disabled", @Value = Model.VAT })
                @Html.HiddenFor(m => m.VAT)
            </div>

            <div>
                <label for="Name"> Name: </label>
                @Html.TextBoxFor(m => m.Name, new { @Value = Model.Name })
            </div>

            <div>
                <label for="Surname"> Surname: </label>
                @Html.TextBoxFor(m => m.Surname, new { @Value = Model.Surname })
            </div>

            <div>
                <label for="Phone"> Phone: </label>
                @Html.TextBoxFor(m => m.Phone, new { @Value = Model.Phone })
            </div>

            <div>
                <label for="Address"> Address: </label>
                @Html.TextBoxFor(m => m.Address, new { @Value = Model.Address })
            </div>
            <div class="card-body">
                <button type="submit" class="card-link">Save Changes</button>
                <button type="button" class="card-link" asp-area="" asp-controller="User" asp-action="#">Delete Account</button>
            </div>
            
        </div>

    }

</div>


