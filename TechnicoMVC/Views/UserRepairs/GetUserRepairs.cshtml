@using TechnicoBackEnd.Models;
@using TechnicoBackEnd.Responses;
@using TechnicoBackEnd.DTOs;
@using TechnicoBackEnd.Auth;
@model IEnumerable<TechnicoBackEnd.DTOs.RepairDTO>;

@{
    ViewData["Title"] = "Repairs";

    // Generate the list of repair types choices from the RepairType enum
    var repairTypes = Enum.GetValues(typeof(TechnicoBackEnd.Models.RepairType))
                          .Cast<TechnicoBackEnd.Models.RepairType>()
                          .Select(rt => new SelectListItem
                                  {
                                      Value = ((int)rt).ToString(),
                                      Text = rt.ToString()
                                  }).ToList();

    // Generate the list of status choices from the RepairStatus enum
    var repairStatuses = Enum.GetValues(typeof(TechnicoBackEnd.Models.RepairStatus))
                             .Cast<TechnicoBackEnd.Models.RepairStatus>()
                             .Select(rs => new SelectListItem
                                     {
                                         Value = ((int)rs).ToString(),
                                         Text = rs.ToString()
                                     }).ToList();
}

<h1 class="d-flex align-items-center">
    <img src="~/images/tools.png" alt="Repair Icon" class="header-icon mr-2" />
    Repairs
</h1>
<br />
<br />
<br />
<p>
    <a asp-action="UserCreateRepair" class="btn btn-primary">Create New</a>
</p>

<form method="get" asp-action="GetAllRepairs" class="form-inline mb-3">
    <div class="form-group mr-2">
        <label for="searchDate">Scheduled Date:</label>
        <input type="date" name="searchDate" class="form-control" value="@ViewData["searchDate"]" />
    </div>
    <div class="form-group mr-2">
        <label for="searchRType">Repair Type:</label>
        <select name="searchRType" class="form-control">
            <option value="">-- Select Repair Type --</option>
            @foreach (var type in repairTypes)
            {
                var selected = (ViewData["searchRType"]?.ToString() == type.Value) ? "selected" : "";
                @Html.Raw($"<option value=\"{type.Value}\" {selected}>{type.Text}</option>")
            }
        </select>
    </div>
    <div class="form-group mr-2">
        <label for="searchStatus">Status:</label>
        <select name="searchStatus" class="form-control">
            <option value="">-- Select Status --</option>
            @foreach (var status in repairStatuses)
            {
                var selected = (ViewData["searchStatus"]?.ToString() == status.Value) ? "selected" : "";
                @Html.Raw($"<option value=\"{status.Value}\" {selected}>{status.Text}</option>")
            }
        </select>
    </div>
    <div class="form-group mr-2">
        <label for="minCost">Min Cost:</label>
        <input type="number" name="minCost" class="form-control" step="0.01" value="@ViewData["minCost"]" />
    </div>
    <div class="form-group mr-2">
        <label for="maxCost">Max Cost:</label>
        <input type="number" name="maxCost" class="form-control" step="0.01" value="@ViewData["maxCost"]" />
    </div>
    <br />
    <button type="submit" class="btn btn-primary mr-2">Search</button>
    <a asp-action="GetAllRepairs" class="btn btn-secondary">Clear</a>
</form>


<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100 card-custom">
                <div class="card-body">
                    <h5 class="card-title text-primary">Scheduled Date: @item.ScheduledDate</h5>
                    <p class="card-text"><strong>PIN:</strong> @Html.DisplayFor(modelItem => item.PropertyIdNum)</p>
                    <p class="card-text"><strong>Repair Type:</strong> @Html.DisplayFor(modelItem => item.RType)</p>
                    <p class="card-text"><strong>Status:</strong> @Html.DisplayFor(modelItem => item.Status)</p>
                    <p class="card-text"><strong>Cost:</strong> @Html.DisplayFor(modelItem => item.Cost)</p>
                </div>
                <div class="card-footer text-center">
                    <a asp-controller="UserRepairs" asp-action="GetUpdatePageCallback" asp-route-id="@item.Id" class="btn btn-custom-edit btn-sm mr-1">Update</a>
                    <a asp-controller="UserRepairs" asp-action="ViewRepairDetails" asp-route-Id="@item.Id" class="btn btn-custom-info btn-sm mr-1">Details</a>
                    <form asp-action="RemoveRepairCallback" method="post" style="display:inline;">
                        <input type="hidden" name="repairId" value="@item.Id" />
                        <button type="submit" class="btn btn-custom-danger btn-sm">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    }
</div>
